//////////////////////////////////////////////////////////////////////
// C++ header file generated by SpecC V2.2.1
// Design: DesignA
// File:   DesignA.h
// Time:   Wed Dec 14 21:51:12 2011
//////////////////////////////////////////////////////////////////////

// Note: User-defined include files are inlined in this file.

// Note: System-defined include files are inlined in this file.

#include <specc.h>

// global annotations ////////////////////////////////////////////////

/* note _AR_MODEL_TYPE = 2; */
/* note _SCE_LINK_OPTIONS = 
{ "-lscprof" }; */
/* note _SCE_LOG = 
{ { "Wed Dec 14 21:44:49 2011","scc Design -sc2sir -I -P -L -l -xcx -xlx -I/ECEnet/Apps1/sce-20100908/inc -P. -P/ECEnet/Apps1/sce-20100908/import -L/ECEnet/Apps1/sce-20100908/lib -lbit4 -lbit -lsim -llonglong -lqthread -xl -Xlinker -xl -R -xl -Xlinker -xl /ECEnet/Apps1/sce-20100908/lib -i Design.sc -o Design.sir",
    "Design.sc","V2.2.1","" },
  { "Wed Dec 14 21:47:54 2011","sce","Design.sc","V2.2.1","Saved to /home/student/monteiro/project/step4/src/DesignA.sir" },
  
  { "Wed Dec 14 21:48:10 2011","sce","Design.sc","V2.2.1","Saved to /home/student/monteiro/project/step4/src/DesignA.sir" },
  
  { "Wed Dec 14 21:49:22 2011","sir_import -v -P -P/home/student/monteiro/.sce/processors -P/ECEnet/Apps1/sce-20100908/share/sce/db/processors -P/ECEnet/Apps1/sce-20100908/share/sce/db/processors/general -P/ECEnet/Apps1/sce-20100908/share/sce/db/processors/controller -P/ECEnet/Apps1/sce-20100908/share/sce/db/processors/dsp -P/ECEnet/Apps1/sce-20100908/share/sce/db/processors/dsp/sim56k -P/ECEnet/Apps1/sce-20100908/share/sce/db/processors/hw -P/ECEnet/Apps1/sce-20100908/share/sce/db/processors/fpga -P/ECEnet/Apps1/sce-20100908/share/sce/db/processors/mem -P/ECEnet/Apps1/sce-20100908/share/sce/db/processors/ip -P/ECEnet/Apps1/sce-20100908/share/sce/db/processors/platform -P/home/student/monteiro/project/step4/src -P/ECEnet/Apps1/sce-20100908/import -i /home/student/monteiro/project/step4/src/DesignA.sir -o /home/student/monteiro/project/step4/src/DesignA.arch.in.sir DesignA dsp56600_0 c_handshake c_double_handshake",
    "/home/student/monteiro/project/step4/src/DesignA.sir","V2.2.1","" },
  
  { "Wed Dec 14 21:51:11 2011","scprof -v -m -i /home/student/monteiro/project/step4/src/DesignA.arch.sir -o /home/student/monteiro/project/step4/src/DesignA.arch.ins.sir DesignA ",
    "DesignA","V2.2.1","Profile Instrumentation Simple mode" } }; */
/* note _SCE_TOP_LEVEL = "bgelim"; */

// named user-defined type declarations //////////////////////////////

struct __pthread_internal_slist;
struct timeval;

#line 65 "/usr/include/gconv.h"
struct __gconv_loaded_object;

#line 42 "DesignA.h"
struct __gconv_trans_data;
struct __gconv_step;
struct __gconv_step_data;
struct __gconv_info;

#line 167 "/usr/include/libio.h"
struct _IO_jump_t;

#line 51 "DesignA.h"
struct _IO_marker;
struct _IO_FILE;

#line 341 "/usr/include/libio.h"
struct _IO_FILE_plus;

#line 58 "DesignA.h"
struct exception;
struct random_data;
struct drand48_data;
struct timespec;

// named enumerator type definitions /////////////////////////////////

#line 203 "/usr/include/libio.h"
enum __codecvt_result {

    __codecvt_ok=0,
    __codecvt_partial=1,
    __codecvt_error=2,
    __codecvt_noconv=3
};

// unnamed enumerator type definitions ///////////////////////////////

#line 38 "/usr/include/gconv.h"
enum {
    __GCONV_OK=0,
    __GCONV_NOCONV=1,
    __GCONV_NODB=2,
    __GCONV_NOMEM=3,

    __GCONV_EMPTY_INPUT=4,
    __GCONV_FULL_OUTPUT=5,
    __GCONV_ILLEGAL_INPUT=6,
    __GCONV_INCOMPLETE_INPUT=7,

    __GCONV_ILLEGAL_DESCRIPTOR=8,
    __GCONV_INTERNAL_ERROR=9
};




enum {
    __GCONV_IS_LAST=1,
    __GCONV_IGNORE_ERRORS=2
};

#line 285 "/usr/include/math.h"
typedef enum {
    _IEEE_=-1,
    _SVID_=0,
    _XOPEN_=1,
    _POSIX_=2,
    _ISOC_=3 }
    _LIB_VERSION_TYPE;

// struct/union type definitions /////////////////////////////////////

#line 41 "./mix_g.h"
typedef struct {
    unsigned char cdata[57600]; }
    struct_T;

#line 31 "./rt_nonfinite.h"
typedef struct {



    struct { unsigned int wordH; unsigned int wordL; } words; }
    BigEndianIEEEDouble;

typedef struct {



    struct { unsigned int wordL; unsigned int wordH; } words; }
    LittleEndianIEEEDouble;

typedef struct {



    union { float wordLreal; unsigned int wordLuint; } wordL; }
    IEEESingle;

#line 69 "./rtwtypes.h"
typedef struct {
    float re;
    float im; }
    creal32_T;

typedef struct {
    double re;
    double im; }
    creal64_T;

typedef struct {
    double re;
    double im; }
    creal_T;

typedef struct {
    char re;
    char im; }
    cint8_T;

typedef struct {
    unsigned char re;
    unsigned char im; }
    cuint8_T;

typedef struct {
    short int re;
    short int im; }
    cint16_T;

typedef struct {
    unsigned short int re;
    unsigned short int im; }
    cuint16_T;

typedef struct {
    int re;
    int im; }
    cint32_T;

typedef struct {
    unsigned int re;
    unsigned int im; }
    cuint32_T;

typedef struct {
    long int re;
    long int im; }
    cint64_T;

typedef struct {
    unsigned long int re;
    unsigned long int im; }
    cuint64_T;

#line 43 "/ECEnet/Apps1/sce-20100908/inc/bits/huge_val.h"
typedef union { unsigned char __c[8]; double __d; } __huge_val_t;

#line 54 "/ECEnet/Apps1/sce-20100908/inc/bits/pthreadtypes.h"
typedef union {
    char __size[36];
    long int __align; }
    pthread_attr_t;

#line 67 "/ECEnet/Apps1/sce-20100908/inc/bits/pthreadtypes.h"
struct __pthread_internal_slist {

    struct __pthread_internal_slist *__next;
};

#line 77 "/ECEnet/Apps1/sce-20100908/inc/bits/pthreadtypes.h"
typedef union {

#line 101 "/ECEnet/Apps1/sce-20100908/inc/bits/pthreadtypes.h"
    struct __pthread_mutex_s { int __lock; unsigned int __count; int __owner; int __kind; unsigned int __nusers; union { int __spins; struct __pthread_internal_slist __list; } dummy; } __data;
    char __size[24];
    long int __align; }
    pthread_mutex_t;


typedef union {
    char __size[4];
    int __align; }
    pthread_mutexattr_t;

#line 116 "/ECEnet/Apps1/sce-20100908/inc/bits/pthreadtypes.h"
typedef union {

#line 130 "/ECEnet/Apps1/sce-20100908/inc/bits/pthreadtypes.h"
    struct { int __lock; unsigned int __futex; unsigned long int dummy1; unsigned long int dummy2; unsigned long int dummy3; unsigned long int dummy4; unsigned long int dummy5; unsigned long int dummy6; void *__mutex; unsigned int __nwaiters; unsigned int __broadcast_seq; } __data;
    char __size[48];
    long long int __align; }
    pthread_cond_t;


typedef union {
    char __size[4];
    int __align; }
    pthread_condattr_t;

#line 154 "/ECEnet/Apps1/sce-20100908/inc/bits/pthreadtypes.h"
typedef union {

#line 188 "/ECEnet/Apps1/sce-20100908/inc/bits/pthreadtypes.h"
    struct { int __lock; unsigned int __nr_readers; unsigned int __readers_wakeup; unsigned int __writer_wakeup; unsigned int __nr_readers_queued; unsigned int __nr_writers_queued; unsigned char __flags; unsigned char __shared; unsigned char __pad1; unsigned char __pad2; int __writer; } __data;

    char __size[32];
    long int __align; }
    pthread_rwlock_t;


typedef union {
    char __size[8];
    long int __align; }
    pthread_rwlockattr_t;

#line 210 "/ECEnet/Apps1/sce-20100908/inc/bits/pthreadtypes.h"
typedef union {
    char __size[20];
    long int __align; }
    pthread_barrier_t;


typedef union {
    char __size[4];
    int __align; }
    pthread_barrierattr_t;

#line 77 "/usr/include/wchar.h"
typedef struct {
    int __count;




    union { unsigned int __wch; char __wchb[4]; } __value; }
    __mbstate_t;

#line 27 "/usr/include/_G_config.h"
typedef struct {
    long int __pos;
    __mbstate_t __state; }
    _G_fpos_t;

#line 63 "/usr/include/bits/types.h"
typedef struct {
    long int __val[2]; }
    __quad_t;

#line 32 "/usr/include/_G_config.h"
typedef struct {
    __quad_t __pos;
    __mbstate_t __state; }
    _G_fpos64_t;

#line 145 "/usr/include/gconv.h"
struct __gconv_step_data {

    unsigned char *__outbuf;
    unsigned char *__outbufend;



    int __flags;



    int __invocation_counter;



    int __internal_use;

    __mbstate_t *__statep;
    __mbstate_t __state;



    struct __gconv_trans_data *__trans;
};



struct __gconv_info {

    unsigned int __nsteps;
    struct __gconv_step *__steps;
    struct __gconv_step_data __data[1];
};

#line 46 "/usr/include/_G_config.h"
typedef union {
    struct __gconv_info __cd;




    struct { struct __gconv_info __cd; struct __gconv_step_data __data; } __combined; }
    _G_iconv_t;

#line 29 "/usr/include/bits/sigset.h"
typedef struct {
    unsigned long int __val[32]; }
    __sigset_t;

#line 69 "/usr/include/bits/time.h"
struct timeval {

    long int tv_sec;
    long int tv_usec;
};

#line 67 "/usr/include/bits/types.h"
typedef struct {
    unsigned long int __val[2]; }
    __u_quad_t;

#line 147 "/usr/include/bits/types.h"
typedef struct { int __val[2]; } __fsid_t;

#line 103 "/usr/include/gconv.h"
struct __gconv_trans_data {


    int (*__trans_fct)(struct __gconv_step *, struct __gconv_step_data *, void *, const unsigned char *, const unsigned char **, const unsigned char *, unsigned char **, unsigned int *);
    int (*__trans_context_fct)(void *, const unsigned char *, const unsigned char *, unsigned char *, unsigned char *);
    void (*__trans_end_fct)(void *);
    void *__data;
    struct __gconv_trans_data *__next;
};



struct __gconv_step {

    struct __gconv_loaded_object *__shlib_handle;
    const char *__modname;

    int __counter;

    char *__from_name;
    char *__to_name;

    int (*__fct)(struct __gconv_step *, struct __gconv_step_data *, const unsigned char **, const unsigned char *, unsigned char **, unsigned int *, int, int);
    unsigned int (*__btowc_fct)(struct __gconv_step *, unsigned char);
    int (*__init_fct)(struct __gconv_step *);
    void (*__end_fct)(struct __gconv_step *);



    int __min_needed_from;
    int __max_needed_from;
    int __min_needed_to;
    int __max_needed_to;


    int __stateful;

    void *__data;
};

#line 183 "/usr/include/libio.h"
struct _IO_marker {
    struct _IO_marker *_next;
    struct _IO_FILE *_sbuf;



    int _pos;
};

#line 268 "/usr/include/libio.h"
struct _IO_FILE {
    int _flags;




    char *_IO_read_ptr;
    char *_IO_read_end;
    char *_IO_read_base;
    char *_IO_write_base;
    char *_IO_write_ptr;
    char *_IO_write_end;
    char *_IO_buf_base;
    char *_IO_buf_end;

    char *_IO_save_base;
    char *_IO_backup_base;
    char *_IO_save_end;

    struct _IO_marker *_markers;

    struct _IO_FILE *_chain;

    int _fileno;



    int _flags2;

    long int _old_offset;



    unsigned short int _cur_column;
    char _vtable_offset;
    char _shortbuf[1];



    void *_lock;

#line 316 "/usr/include/libio.h"
    __quad_t _offset;

#line 325 "/usr/include/libio.h"
    void *__pad1;
    void *__pad2;
    void *__pad3;
    void *__pad4;
    unsigned int __pad5;

    int _mode;

    char _unused2[40];
};

#line 309 "/usr/include/math.h"
struct exception {


    int type;
    char *name;
    double arg1;
    double arg2;
    double retval;
};

#line 99 "/usr/include/stdlib.h"
typedef struct {
    int quot;
    int rem; }
    div_t;




typedef struct {
    long int quot;
    long int rem; }
    ldiv_t;

#line 467 "/usr/include/stdlib.h"
struct random_data {

    int *fptr;
    int *rptr;
    int *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int *end_ptr;
};

#line 536 "/usr/include/stdlib.h"
struct drand48_data {

    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    unsigned long long int __a;
};

#line 68 "/usr/include/sys/select.h"
typedef struct {

#line 75 "/usr/include/sys/select.h"
    long int __fds_bits[32]; }


    fd_set;

#line 121 "/usr/include/time.h"
struct timespec {

    long int tv_sec;
    long int tv_nsec;
};

// type synonym definitions //////////////////////////////////////////

#line 13 "./mix_g.h"
typedef char int8_T;
typedef unsigned char uint8_T;
typedef short int int16_T;
typedef unsigned short int uint16_T;
typedef int int32_T;
typedef unsigned int uint32_T;
typedef long int int64_T;
typedef unsigned long int uint64_T;
typedef float real32_T;
typedef double real64_T;

#line 29 "./mix_g.h"
typedef double real_T;
typedef double time_T;
typedef unsigned char boolean_T;
typedef int int_T;
typedef unsigned int uint_T;
typedef unsigned long int ulong_T;
typedef char char_T;
typedef char byte_T;

#line 50 "/ECEnet/Apps1/sce-20100908/inc/bits/pthreadtypes.h"
typedef unsigned long int pthread_t;

#line 70 "/ECEnet/Apps1/sce-20100908/inc/bits/pthreadtypes.h"
typedef struct __pthread_internal_slist __pthread_slist_t;

#line 143 "/ECEnet/Apps1/sce-20100908/inc/bits/pthreadtypes.h"
typedef unsigned int pthread_key_t;



typedef int pthread_once_t;

#line 204 "/ECEnet/Apps1/sce-20100908/inc/bits/pthreadtypes.h"
typedef volatile int pthread_spinlock_t;

#line 57 "/ECEnet/Apps1/sce-20100908/inc/sim/time.sh"
typedef unsigned long long int sim_time;

typedef unsigned long long int sim_delta;

typedef char sim_time_string[21];

#line 55 "/usr/include/_G_config.h"
typedef int _G_int16_t;
typedef int _G_int32_t;
typedef unsigned int _G_uint16_t;
typedef unsigned int _G_uint32_t;

#line 23 "/usr/include/bits/sigset.h"
typedef int __sig_atomic_t;

#line 34 "/usr/include/bits/types.h"
typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef char __int8_t;
typedef unsigned char __uint8_t;
typedef short int __int16_t;
typedef unsigned short int __uint16_t;
typedef int __int32_t;
typedef unsigned int __uint32_t;

#line 138 "/usr/include/bits/types.h"
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;

typedef unsigned int __mode_t;
typedef unsigned int __nlink_t;
typedef long int __off_t;

typedef int __pid_t;

typedef long int __clock_t;
typedef unsigned long int __rlim_t;

typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef long int __swblk_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void *__timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;



typedef unsigned long int __fsblkcnt_t;



typedef unsigned long int __fsfilcnt_t;


typedef int __ssize_t;




typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


typedef int __intptr_t;


typedef unsigned int __socklen_t;

#line 70 "/usr/include/gconv.h"
typedef int (*__gconv_fct)(struct __gconv_step *, struct __gconv_step_data *, const unsigned char **, const unsigned char *, unsigned char **, unsigned int *, int, int);




typedef unsigned int (*__gconv_btowc_fct)(struct __gconv_step *, unsigned char);


typedef int (*__gconv_init_fct)(struct __gconv_step *);
typedef void (*__gconv_end_fct)(struct __gconv_step *);



typedef int (*__gconv_trans_fct)(struct __gconv_step *, struct __gconv_step_data *, void *, const unsigned char *, const unsigned char **, const unsigned char *, unsigned char **, unsigned int *);

#line 91 "/usr/include/gconv.h"
typedef int (*__gconv_trans_context_fct)(void *, const unsigned char *, const unsigned char *, unsigned char *, unsigned char *);




typedef int (*__gconv_trans_query_fct)(const char *, const char ***, unsigned int *);



typedef int (*__gconv_trans_init_fct)(void **, const char *);
typedef void (*__gconv_trans_end_fct)(void *);

#line 177 "/usr/include/gconv.h"
typedef struct __gconv_info *__gconv_t;

#line 177 "/usr/include/libio.h"
typedef void _IO_lock_t;

#line 338 "/usr/include/libio.h"
typedef struct _IO_FILE _IO_FILE;

#line 361 "/usr/include/libio.h"
typedef int __io_read_fn(void *, char *, unsigned int);

#line 369 "/usr/include/libio.h"
typedef int __io_write_fn(void *, const char *, unsigned int);

#line 378 "/usr/include/libio.h"
typedef int __io_seek_fn(void *, __quad_t *, int);


typedef int __io_close_fn(void *);

#line 46 "/usr/include/stdio.h"
typedef struct _IO_FILE FILE;

#line 62 "/usr/include/stdio.h"
typedef struct _IO_FILE __FILE;

#line 764 "/usr/include/stdlib.h"
typedef int (*__compar_fn_t)(const void *, const void *);

#line 49 "/usr/include/sys/select.h"
typedef long int suseconds_t;

#line 55 "/usr/include/sys/select.h"
typedef long int __fd_mask;

#line 85 "/usr/include/sys/select.h"
typedef long int fd_mask;

#line 35 "/usr/include/sys/types.h"
typedef unsigned char u_char;
typedef unsigned short int u_short;
typedef unsigned int u_int;
typedef unsigned long int u_long;

#line 50 "/usr/include/sys/types.h"
typedef unsigned long int ino_t;

#line 67 "/usr/include/sys/types.h"
typedef unsigned int gid_t;




typedef unsigned int mode_t;




typedef unsigned int nlink_t;




typedef unsigned int uid_t;

#line 88 "/usr/include/sys/types.h"
typedef long int off_t;

#line 100 "/usr/include/sys/types.h"
typedef int pid_t;




typedef unsigned int id_t;




typedef int ssize_t;

#line 116 "/usr/include/sys/types.h"
typedef int daddr_t;
typedef char *caddr_t;

#line 123 "/usr/include/sys/types.h"
typedef int key_t;

#line 151 "/usr/include/sys/types.h"
typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;

#line 163 "/usr/include/sys/types.h"
typedef char int8_t;
typedef short int int16_t;
typedef int int32_t;

#line 174 "/usr/include/sys/types.h"
typedef unsigned char u_int8_t;
typedef unsigned short int u_int16_t;
typedef unsigned int u_int32_t;

#line 183 "/usr/include/sys/types.h"
typedef int register_t;

#line 235 "/usr/include/sys/types.h"
typedef long int blkcnt_t;



typedef unsigned long int fsblkcnt_t;



typedef unsigned long int fsfilcnt_t;

#line 77 "/usr/include/time.h"
typedef long int time_t;

#line 93 "/usr/include/time.h"
typedef int clockid_t;

#line 105 "/usr/include/time.h"
typedef void *timer_t;

#line 43 "/usr/lib/gcc/i386-redhat-linux/3.4.6/include/stdarg.h"
typedef void *__gnuc_va_list;

#line 151 "/usr/lib/gcc/i386-redhat-linux/3.4.6/include/stddef.h"
typedef int ptrdiff_t;

#line 213 "/usr/lib/gcc/i386-redhat-linux/3.4.6/include/stddef.h"
typedef unsigned int size_t;

#line 354 "/usr/lib/gcc/i386-redhat-linux/3.4.6/include/stddef.h"
typedef unsigned int wint_t;

// class declarations ////////////////////////////////////////////////

#line 831 "DesignA.h"
class mixtures;
/* note mixtures._AR_INTERNAL_SIT_ON = 1; */
class Monitor;
class rgb2gray;
/* note rgb2gray._AR_INTERNAL_SIT_ON = 1; */
class Stimulus;
class Main;
class c_double_handshake;

#line 72 "c_double_handshake.sc"
/* note c_double_handshake._SCE_STANDARD_LIB = { "c_double_handshake" }; */

#line 844 "DesignA.h"
class c_handshake;

#line 56 "c_handshake.sc"
/* note c_handshake._SCE_STANDARD_LIB = { "c_handshake" }; */

#line 850 "DesignA.h"
class c_queue;

#line 77 "c_queue.sc"
/* note c_queue._SCE_STANDARD_LIB = { "c_queue" }; */

#line 856 "DesignA.h"
class i_receive;

#line 29 "i_receive.sc"
/* note i_receive._SCE_STANDARD_LIB = { "i_receive" }; */

#line 862 "DesignA.h"
class i_receiver;

#line 25 "i_receiver.sc"
/* note i_receiver._SCE_STANDARD_LIB = { "i_receiver" }; */

#line 868 "DesignA.h"
class i_send;

#line 27 "i_send.sc"
/* note i_send._SCE_STANDARD_LIB = { "i_send" }; */

#line 874 "DesignA.h"
class i_sender;

#line 26 "i_sender.sc"
/* note i_sender._SCE_STANDARD_LIB = { "i_sender" }; */

#line 880 "DesignA.h"
class i_tranceiver;

#line 27 "i_tranceiver.sc"
/* note i_tranceiver._SCE_STANDARD_LIB = { "i_tranceiver" }; */

#line 886 "DesignA.h"
class Motorola_DSP56600_0;

#line 26 "/ECEnet/Apps1/sce-20100908/share/sce/db/processors/dsp/dsp56600.sc"
/* note Motorola_DSP56600_0._PE_LIBRARY = 1; */
/* note Motorola_DSP56600_0._PE_CATEGORY = "DSP"; */
/* note Motorola_DSP56600_0._PE_OS_MODEL = { 
  "Motorola_DSP56600_OSNONE_0",
  "Motorola_DSP56600_OS_FCFS_0",
  "Motorola_DSP56600_OS_PRIORITY_0" }; */

/* note Motorola_DSP56600_0._PE_BF_MODEL = "Motorola_DSP56600_BF_0"; */
/* note Motorola_DSP56600_0._PE_CA_MODEL = "Motorola_DSP56600_ISS_0"; */
/* note Motorola_DSP56600_0._PE_BF_BUS = { { "PortA","Motorola_DSP56600_PortA_2_0",
    "Master",{ { 32768ull,65535ull } } } }; */
/* note Motorola_DSP56600_0._PE_CLOCK_FREQUENCY = { 6.000000000000000e+07,{ 0.000000000000000e+00,6.000000000000000e+07 } }; */
/* note Motorola_DSP56600_0._PE_COST = 2.300000000000000e+00; */
/* note Motorola_DSP56600_0._PE_POWER = 5.130000000000000e+00; */
/* note Motorola_DSP56600_0._PE_COMMENT = "16 bit DSP"; */
/* note Motorola_DSP56600_0._PE_INSTRUCTION_WIDTH = 24u; */
/* note Motorola_DSP56600_0._PE_DATA_WIDTH = 16u; */
/* note Motorola_DSP56600_0._PE_CHAR_WIDTH = 16u; */
/* note Motorola_DSP56600_0._PE_PROGRAM_MEMORY = 32768ul; */
/* note Motorola_DSP56600_0._PE_DATA_MEMORY = 65536ul; */
/* note Motorola_DSP56600_0._PE_MIPS = 6.000000000000000e+01; */
/* note Motorola_DSP56600_0._PE_MEMORY_BITPACKING = true; */
/* note Motorola_DSP56600_0._PE_MEMORY_HEADER_DATATYPE = { "bool","char","short int","int","long int","long long int","float","double","long double","bit","bit4","void*" }; */
/* note Motorola_DSP56600_0._PE_MEMORY_HEADER_ITEMTYPE = { "Size","Alignment" }; */
/* note Motorola_DSP56600_0._PE_MEMORY_LAYOUT = { { 1,1,1,1,2,4,2,4,4,0,0,1 },{ 1,1,1,1,1,1,1,1,1,1,1,1 } }; */
/* note Motorola_DSP56600_0._PE_WEIGHT_OPERATION_HEADER_DATATYPE = { "bool","char","unsigned char","short int","unsigned short int","int","unsigned int","long int","unsigned long int","long long int","unsigned long long int","float","double","long double","void","event","void*" }; */
/* note Motorola_DSP56600_0._PE_WEIGHT_OPERATION_HEADER_ITEMTYPE = { "void","#1","#i","()","this","[]","f()",".","->","p++","p--","[:]","++p","--p","&p","*p","+x","-x","~","!","sizeof(E)","sizeof(T)","()x","@","*","/","%","+","-","<<",">>","<",">","<=",">=","==","!=","&","^","|","&&","||",":?","=","*=","/=","%=","+=","-=","<<=",">>=","&=","^=","|=","'","L_Comp","L_Extract","L_abs","L_add","L_add_c","L_mac","L_macNs","L_msu","L_mult","L_negate","L_shl","L_shr","L_shr_r","L_sub","L_deposit_h","L_deposit_l","Mpy_32","Mpy_32_16","abs_s","add","div_s","mac_r","msu_r","mult","mult_r","negate","norm_l","norm_s","extract_l","extract_h","overflow","round","saturate","shl","shr","shr_r","sub" }; */
/* note Motorola_DSP56600_0._PE_WEIGHT_OPERATION_DYNAMIC = { { 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,1.200000000000000e+01,1.200000000000000e+01,1.200000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,6.000000000000000e+00,6.000000000000000e+00,6.000000000000000e+00,6.000000000000000e+00,1.140000000000000e+02,1.140000000000000e+02,1.140000000000000e+02,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,2.240000000000000e+02,2.240000000000000e+02,2.240000000000000e+02,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,4.500000000000000e+01,1.370000000000000e+02,1.370000000000000e+02,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,4.500000000000000e+01,1.370000000000000e+02,1.370000000000000e+02,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.700000000000000e+01,2.700000000000000e+01,2.700000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.700000000000000e+01,2.700000000000000e+01,2.700000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,1.100000000000000e+01,1.100000000000000e+01,1.100000000000000e+01,3.100000000000000e+01,3.100000000000000e+01,3.100000000000000e+01,3.100000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,6.000000000000000e+00,6.000000000000000e+00,6.000000000000000e+00,6.000000000000000e+00,1.140000000000000e+02,1.140000000000000e+02,1.140000000000000e+02,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,2.240000000000000e+02,2.240000000000000e+02,2.240000000000000e+02,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,4.500000000000000e+01,1.370000000000000e+02,1.370000000000000e+02,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,4.500000000000000e+01,1.370000000000000e+02,1.370000000000000e+02,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Motorola_DSP56600_0._PE_WEIGHT_OPERATION_STATIC = { { 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,7.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 },{ 
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00 } }; */

/* note Motorola_DSP56600_0._SIR_PARAMETERS = {  }; */



/* note Motorola_DSP56600_0._PORTA_PARAMETERS = { { 
    "CHAR_SIZE",2u,{ 2u,3u } } }; */

#line 1074 "DesignA.h"
class Motorola_DSP56600_0_DSP;
/* note Motorola_DSP56600_0_DSP._AR_MAPPED_TO = "DSP"; */
/* note Motorola_DSP56600_0_DSP._PE_BF_BUS = 
{ { "PortA","Motorola_DSP56600_PortA_2_0","Master",
    { { 32768ull,65535ull } } } }; */
/* note Motorola_DSP56600_0_DSP._PE_BF_MODEL = "Motorola_DSP56600_BF_0"; */
/* note Motorola_DSP56600_0_DSP._PE_CATEGORY = "DSP"; */
/* note Motorola_DSP56600_0_DSP._PE_CA_MODEL = "Motorola_DSP56600_ISS_0"; */
/* note Motorola_DSP56600_0_DSP._PE_CHAR_WIDTH = 16u; */
/* note Motorola_DSP56600_0_DSP._PE_CLOCK_FREQUENCY = 
{ 6.000000000000000e+07,
  { 0.000000000000000e+00,6.000000000000000e+07 } }; */
/* note Motorola_DSP56600_0_DSP._PE_COMMENT = "16 bit DSP"; */
/* note Motorola_DSP56600_0_DSP._PE_COST = 2.300000000000000e+00; */
/* note Motorola_DSP56600_0_DSP._PE_DATA_MEMORY = 65536ul; */
/* note Motorola_DSP56600_0_DSP._PE_DATA_WIDTH = 16u; */
/* note Motorola_DSP56600_0_DSP._PE_INSTRUCTION_WIDTH = 24u; */
/* note Motorola_DSP56600_0_DSP._PE_LIBRARY = 1; */
/* note Motorola_DSP56600_0_DSP._PE_MEMORY_BITPACKING = true; */
/* note Motorola_DSP56600_0_DSP._PE_MEMORY_HEADER_DATATYPE = 
{ "bool","char","short int","int","long int","long long int","float","double",
  "long double","bit","bit4","void*" }; */
/* note Motorola_DSP56600_0_DSP._PE_MEMORY_HEADER_ITEMTYPE = 
{ "Size","Alignment" }; */
/* note Motorola_DSP56600_0_DSP._PE_MEMORY_LAYOUT = 
{ { 1,1,1,1,2,4,2,4,4,0,0,1 },
  { 1,1,1,1,1,1,1,1,1,1,1,1 } }; */
/* note Motorola_DSP56600_0_DSP._PE_MIPS = 6.000000000000000e+01; */
/* note Motorola_DSP56600_0_DSP._PE_OS_MODEL = 
{ "Motorola_DSP56600_OSNONE_0","Motorola_DSP56600_OS_FCFS_0","Motorola_DSP56600_OS_PRIORITY_0" }; */
/* note Motorola_DSP56600_0_DSP._PE_POWER = 5.130000000000000e+00; */
/* note Motorola_DSP56600_0_DSP._PE_PROGRAM_MEMORY = 32768ul; */
/* note Motorola_DSP56600_0_DSP._PE_WEIGHT_OPERATION_DYNAMIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,1.200000000000000e+01,
    1.200000000000000e+01,1.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,6.000000000000000e+00,6.000000000000000e+00,
    6.000000000000000e+00,6.000000000000000e+00,1.140000000000000e+02,
    1.140000000000000e+02,1.140000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,
    3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,
    3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,
    3.200000000000000e+01,3.200000000000000e+01,2.240000000000000e+02,
    2.240000000000000e+02,2.240000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,
    3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,
    3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,
    3.800000000000000e+01,3.800000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.500000000000000e+01,
    1.370000000000000e+02,1.370000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.500000000000000e+01,
    1.370000000000000e+02,1.370000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.700000000000000e+01,
    2.700000000000000e+01,2.700000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.700000000000000e+01,
    2.700000000000000e+01,2.700000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.100000000000000e+01,1.100000000000000e+01,
    1.100000000000000e+01,3.100000000000000e+01,3.100000000000000e+01,
    3.100000000000000e+01,3.100000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,6.000000000000000e+00,6.000000000000000e+00,
    6.000000000000000e+00,6.000000000000000e+00,1.140000000000000e+02,
    1.140000000000000e+02,1.140000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,
    3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,
    3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,
    3.200000000000000e+01,3.200000000000000e+01,2.240000000000000e+02,
    2.240000000000000e+02,2.240000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,
    3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,
    3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,
    3.800000000000000e+01,3.800000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.500000000000000e+01,
    1.370000000000000e+02,1.370000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.500000000000000e+01,
    1.370000000000000e+02,1.370000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Motorola_DSP56600_0_DSP._PE_WEIGHT_OPERATION_HEADER_DATATYPE = 
{ "bool","char","unsigned char","short int","unsigned short int","int",
  "unsigned int","long int","unsigned long int","long long int","unsigned long long int",
  "float","double","long double","void","event","void*" }; */
/* note Motorola_DSP56600_0_DSP._PE_WEIGHT_OPERATION_HEADER_ITEMTYPE = 
{ "void","#1","#i","()","this","[]","f()",".","->","p++","p--","[:]","++p",
  "--p","&p","*p","+x","-x","~","!","sizeof(E)","sizeof(T)","()x","@",
  "*","/","%","+","-","<<",">>","<",">","<=",">=","==","!=","&","^","|",
  "&&","||",":?","=","*=","/=","%=","+=","-=","<<=",">>=","&=","^=","|=",
  "'","L_Comp","L_Extract","L_abs","L_add","L_add_c","L_mac","L_macNs",
  "L_msu","L_mult","L_negate","L_shl","L_shr","L_shr_r","L_sub","L_deposit_h",
  "L_deposit_l","Mpy_32","Mpy_32_16","abs_s","add","div_s","mac_r","msu_r",
  "mult","mult_r","negate","norm_l","norm_s","extract_l","extract_h","overflow",
  "round","saturate","shl","shr","shr_r","sub" }; */
/* note Motorola_DSP56600_0_DSP._PE_WEIGHT_OPERATION_STATIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,
    1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,
    1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,
    1.500000000000000e+01,1.500000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,
    1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,
    1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,
    1.500000000000000e+01,1.500000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,3.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,2.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,3.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,7.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,3.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    3.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Motorola_DSP56600_0_DSP._PORTA_PARAMETERS = 
{ { "CHAR_SIZE",2u,
    { 2u,3u } } }; */
/* note Motorola_DSP56600_0_DSP._SIR_PARAMETERS = 
{  }; */
class bgelim;
/* note bgelim._AR_PES = 
{ { "DSP","Motorola_DSP56600_0","16 bit DSP",
    { true,false,
      { { "PortA",
	  { "Motorola_DSP56600_PortA_2_0","_2_0" },
	  { "Master" },
	  { { { 32768ull,65535ull } } } } } },
    { { 6.000000000000000e+07,
	{ 0.000000000000000e+00,6.000000000000000e+07 } },32768ul,65536ul,
      24u,16u,16u,2.300000000000000e+00 },
    {  },
    {  },
    {  },
    {  },
    { "/ECEnet/Apps1/sce-20100908/share/sce/db/processors/processors.sir",
      
      { "dsp56600_0","dsp56600os_0","dsp56600os_0","dsp56600os_0","","dsp56600bf_0",
	"" },
      { "Motorola_DSP56600_0","Motorola_DSP56600_OSNONE_0","Motorola_DSP56600_OS_FCFS_0",
	"Motorola_DSP56600_OS_PRIORITY_0","","Motorola_DSP56600_BF_0",
	"Motorola_DSP56600_ISS_0" },
      { "16 bit DSP","","","","","","" },
      { "dsp56600.sc","dsp56600os.sc","dsp56600os.sc","dsp56600os.sc",
	"","dsp56600bf.sc","" } },
    { { "PORTA_PORTA_USE_MAC_TLM",0,
	{ 0,1 },
	{ "Use MAC TLM",
	  { "PORTA","Motorola DSP56600 external bus interface (Port A)" } } } } } }; */
/* note bgelim._CR_BUSSES = 
{ { "PortA0","Motorola_DSP56600_PortA_2_0","Motorola DSP56600 external bus interface (Port A)",
    
    { 1u,1u,"Motorola_DSP56600_PortA_2_0",
      { "Master" },"Slave","",
      { "MasterIntA","MasterIntB","MasterIntC","MasterIntD" },true,
      {  } },
    { 0ull,5.000000000000000e-01,2.880000000000000e+05,16u,24u,16u,1u,
      1.000000000000000e+00 },
    {  },
    { "/ECEnet/Apps1/sce-20100908/share/sce/db/busses/busses.sir","dsp566portA_2_0",
      "Motorola_DSP56600_PortA_2_0","Motorola DSP56600 external bus interface (Port A)",
      "dsp566portA.sc" },
    { { "CHAR_SIZE",2u,
	{ 2u,3u },"Memory character size","bytes" },
      { "PORTA_USE_MAC_TLM",0,
	{ 0,1 },"Use MAC TLM" } } } }; */
/* note bgelim._NR_CONNECTIVITY = 
{ { { "DSP","PortA" },"PortA0",
    { "Master" } } }; */
/* note bgelim._PE_DSP_MEMORY_BITPACKING = true; */
/* note bgelim._PE_DSP_MEMORY_HEADER_DATATYPE = 
{ "bool","char","short int","int","long int","long long int","float","double",
  "long double","bit","bit4","void*" }; */
/* note bgelim._PE_DSP_MEMORY_HEADER_ITEMTYPE = 
{ "Size","Alignment" }; */
/* note bgelim._PE_DSP_MEMORY_LAYOUT = 
{ { 1,1,1,1,2,4,2,4,4,0,0,1 },
  { 1,1,1,1,1,1,1,1,1,1,1,1 } }; */
/* note bgelim._PE_DSP_WEIGHT_MEMORY_DYNAMIC = 
{ { 1.200000000000000e+01,4.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,4.000000000000000e+00,1.000000000000000e+00,
    6.400000000000000e+01,4.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,4.000000000000000e+00,8.000000000000000e+00,
    3.000000000000000e+00,1.920000000000000e+04,9.000000000000000e+00,
    7.000000000000000e+00,3.200000000000000e+01,3.200000000000000e+01,
    2.600000000000000e+01,2.000000000000000e+01,4.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,3.000000000000000e+00,
    1.000000000000000e+00,1.200000000000000e+01,1.000000000000000e+00,
    1.400000000000000e+01,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    7.000000000000000e+00,2.000000000000000e+01,4.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,5.000000000000000e+00,
    6.400000000000000e+01,2.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,3.600000000000000e+01,2.000000000000000e+00,
    3.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+01,
    2.000000000000000e+00,5.760000000000000e+04,2.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,7.000000000000000e+00,
    7.680000000000000e+04,8.000000000000000e+00,1.400000000000000e+01,
    5.000000000000000e+00,1.200000000000000e+01,4.000000000000000e+00,
    1.500000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    2.000000000000000e+00,4.000000000000000e+00,1.200000000000000e+01,
    6.400000000000000e+01,4.000000000000000e+00,2.000000000000000e+00,
    2.304000000000000e+05,2.400000000000000e+01,3.600000000000000e+01,
    8.000000000000000e+00,4.800000000000000e+01,1.000000000000000e+00,
    8.000000000000000e+00,6.250000000000000e+02,1.000000000000000e+00,
    5.760000000000000e+04,1.000000000000000e+00,7.200000000000000e+01,
    2.000000000000000e+00,4.000000000000000e+00,2.000000000000000e+00,
    1.000000000000000e+00,2.100000000000000e+01,5.760000000000000e+04,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    2.000000000000000e+00,8.000000000000000e+00,2.400000000000000e+01,
    4.000000000000000e+00 },
  { 1.200000000000000e+01,4.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,4.000000000000000e+00,1.000000000000000e+00,
    6.400000000000000e+01,4.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,4.000000000000000e+00,8.000000000000000e+00,
    3.000000000000000e+00,1.920000000000000e+04,9.000000000000000e+00,
    7.000000000000000e+00,3.200000000000000e+01,3.200000000000000e+01,
    2.600000000000000e+01,2.000000000000000e+01,4.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,3.000000000000000e+00,
    1.000000000000000e+00,1.200000000000000e+01,1.000000000000000e+00,
    1.400000000000000e+01,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    7.000000000000000e+00,2.000000000000000e+01,4.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,5.000000000000000e+00,
    6.400000000000000e+01,2.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,3.600000000000000e+01,2.000000000000000e+00,
    3.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+01,
    2.000000000000000e+00,5.760000000000000e+04,2.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,7.000000000000000e+00,
    7.680000000000000e+04,8.000000000000000e+00,1.400000000000000e+01,
    5.000000000000000e+00,1.200000000000000e+01,4.000000000000000e+00,
    1.500000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    2.000000000000000e+00,4.000000000000000e+00,1.200000000000000e+01,
    6.400000000000000e+01,4.000000000000000e+00,2.000000000000000e+00,
    2.304000000000000e+05,2.400000000000000e+01,3.600000000000000e+01,
    8.000000000000000e+00,4.800000000000000e+01,1.000000000000000e+00,
    8.000000000000000e+00,6.250000000000000e+02,1.000000000000000e+00,
    5.760000000000000e+04,1.000000000000000e+00,7.200000000000000e+01,
    2.000000000000000e+00,4.000000000000000e+00,2.000000000000000e+00,
    1.000000000000000e+00,2.100000000000000e+01,5.760000000000000e+04,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    2.000000000000000e+00,8.000000000000000e+00,2.400000000000000e+01,
    4.000000000000000e+00 } }; */
/* note bgelim._PE_DSP_WEIGHT_MEMORY_HEADER_DATATYPE = 
{ "double[3]","pthread_condattr_t","cint16_T","__fsid_t","pthread_mutexattr_t",
  "short int","fd_set","__u_quad_t","void*","void","char[4]","__huge_val_t",
  "unsigned short int[3]","unsigned char[19200]","_G_fpos64_t","unsigned short int[7]",
  "char[32]","pthread_rwlock_t","_G_iconv_t","char[20]","unsigned long int[2]",
  "unsigned long long int","double[1]","struct _IO_marker","char[1]","struct __gconv_step_data",
  "unsigned short int","struct __gconv_info","event","__sigset_t","div_t",
  "creal_T","ldiv_t","_G_fpos_t","pthread_barrier_t","long int[2]","unsigned char",
  "unsigned int","struct __gconv_trans_data","unsigned long int[32]","unsigned long int",
  "enum __codecvt_result","creal32_T","pthread_attr_t","long int","char[3]",
  "float","char[40]","int[2]","char[57600]","cint8_T","_LIB_VERSION_TYPE",
  "BigEndianIEEEDouble","char[64]","char[48]","long double","struct random_data",
  "double[19200]","unsigned char[8]","struct exception","__mbstate_t",
  "struct drand48_data","long long int","struct __gconv_step","struct timespec",
  "pthread_barrierattr_t","LittleEndianIEEEDouble","struct timeval","struct __gconv_step_data[1]",
  "long int[32]","double","cuint8_T","double[57600]","char[24]","char[36]",
  "char[8]","pthread_cond_t","int","creal64_T","unsigned int[625]","char",
  "unsigned char[57600]","struct __pthread_internal_slist","struct _IO_FILE",
  "cuint16_T","__quad_t","cint32_T","bool","char[21]","struct_T","IEEESingle",
  "unsigned int[2]","cint64_T","cuint32_T","pthread_rwlockattr_t","pthread_mutex_t",
  "cuint64_T" }; */
/* note bgelim._PE_DSP_WEIGHT_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note bgelim._PE_DSP_WEIGHT_MEMORY_STATIC = 
{ { 1.200000000000000e+01,4.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,4.000000000000000e+00,1.000000000000000e+00,
    6.400000000000000e+01,4.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,4.000000000000000e+00,8.000000000000000e+00,
    3.000000000000000e+00,1.920000000000000e+04,9.000000000000000e+00,
    7.000000000000000e+00,3.200000000000000e+01,3.200000000000000e+01,
    2.600000000000000e+01,2.000000000000000e+01,4.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,3.000000000000000e+00,
    1.000000000000000e+00,1.200000000000000e+01,1.000000000000000e+00,
    1.400000000000000e+01,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    7.000000000000000e+00,2.000000000000000e+01,4.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,5.000000000000000e+00,
    6.400000000000000e+01,2.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,3.600000000000000e+01,2.000000000000000e+00,
    3.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+01,
    2.000000000000000e+00,5.760000000000000e+04,2.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,7.000000000000000e+00,
    7.680000000000000e+04,8.000000000000000e+00,1.400000000000000e+01,
    5.000000000000000e+00,1.200000000000000e+01,4.000000000000000e+00,
    1.500000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    2.000000000000000e+00,4.000000000000000e+00,1.200000000000000e+01,
    6.400000000000000e+01,4.000000000000000e+00,2.000000000000000e+00,
    2.304000000000000e+05,2.400000000000000e+01,3.600000000000000e+01,
    8.000000000000000e+00,4.800000000000000e+01,1.000000000000000e+00,
    8.000000000000000e+00,6.250000000000000e+02,1.000000000000000e+00,
    5.760000000000000e+04,1.000000000000000e+00,7.200000000000000e+01,
    2.000000000000000e+00,4.000000000000000e+00,2.000000000000000e+00,
    1.000000000000000e+00,2.100000000000000e+01,5.760000000000000e+04,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    2.000000000000000e+00,8.000000000000000e+00,2.400000000000000e+01,
    4.000000000000000e+00 },
  { 1.200000000000000e+01,4.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,4.000000000000000e+00,1.000000000000000e+00,
    6.400000000000000e+01,4.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,4.000000000000000e+00,8.000000000000000e+00,
    3.000000000000000e+00,1.920000000000000e+04,9.000000000000000e+00,
    7.000000000000000e+00,3.200000000000000e+01,3.200000000000000e+01,
    2.600000000000000e+01,2.000000000000000e+01,4.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,3.000000000000000e+00,
    1.000000000000000e+00,1.200000000000000e+01,1.000000000000000e+00,
    1.400000000000000e+01,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    7.000000000000000e+00,2.000000000000000e+01,4.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,5.000000000000000e+00,
    6.400000000000000e+01,2.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,3.600000000000000e+01,2.000000000000000e+00,
    3.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+01,
    2.000000000000000e+00,5.760000000000000e+04,2.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,7.000000000000000e+00,
    7.680000000000000e+04,8.000000000000000e+00,1.400000000000000e+01,
    5.000000000000000e+00,1.200000000000000e+01,4.000000000000000e+00,
    1.500000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    2.000000000000000e+00,4.000000000000000e+00,1.200000000000000e+01,
    6.400000000000000e+01,4.000000000000000e+00,2.000000000000000e+00,
    2.304000000000000e+05,2.400000000000000e+01,3.600000000000000e+01,
    8.000000000000000e+00,4.800000000000000e+01,1.000000000000000e+00,
    8.000000000000000e+00,6.250000000000000e+02,1.000000000000000e+00,
    5.760000000000000e+04,1.000000000000000e+00,7.200000000000000e+01,
    2.000000000000000e+00,4.000000000000000e+00,2.000000000000000e+00,
    1.000000000000000e+00,2.100000000000000e+01,5.760000000000000e+04,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    2.000000000000000e+00,8.000000000000000e+00,2.400000000000000e+01,
    4.000000000000000e+00 } }; */
/* note bgelim._PE_DSP_WEIGHT_OPERATION_DYNAMIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,1.200000000000000e+01,
    1.200000000000000e+01,1.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,6.000000000000000e+00,6.000000000000000e+00,
    6.000000000000000e+00,6.000000000000000e+00,1.140000000000000e+02,
    1.140000000000000e+02,1.140000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,
    3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,
    3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,
    3.200000000000000e+01,3.200000000000000e+01,2.240000000000000e+02,
    2.240000000000000e+02,2.240000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,
    3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,
    3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,
    3.800000000000000e+01,3.800000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.500000000000000e+01,
    1.370000000000000e+02,1.370000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.500000000000000e+01,
    1.370000000000000e+02,1.370000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.200000000000000e+01,
    2.200000000000000e+01,2.200000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.700000000000000e+01,
    2.700000000000000e+01,2.700000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.700000000000000e+01,
    2.700000000000000e+01,2.700000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.100000000000000e+01,1.100000000000000e+01,
    1.100000000000000e+01,3.100000000000000e+01,3.100000000000000e+01,
    3.100000000000000e+01,3.100000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,6.000000000000000e+00,6.000000000000000e+00,
    6.000000000000000e+00,6.000000000000000e+00,1.140000000000000e+02,
    1.140000000000000e+02,1.140000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,
    3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,
    3.200000000000000e+01,3.200000000000000e+01,3.200000000000000e+01,
    3.200000000000000e+01,3.200000000000000e+01,2.240000000000000e+02,
    2.240000000000000e+02,2.240000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,
    3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,
    3.800000000000000e+01,3.800000000000000e+01,3.800000000000000e+01,
    3.800000000000000e+01,3.800000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.500000000000000e+01,
    1.370000000000000e+02,1.370000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.500000000000000e+01,
    1.370000000000000e+02,1.370000000000000e+02,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,3.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,2.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,3.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,7.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,3.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    3.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note bgelim._PE_DSP_WEIGHT_OPERATION_HEADER_DATATYPE = 
{ "bool","char","unsigned char","short int","unsigned short int","int",
  "unsigned int","long int","unsigned long int","long long int","unsigned long long int",
  "float","double","long double","void","event","void*" }; */
/* note bgelim._PE_DSP_WEIGHT_OPERATION_HEADER_ITEMTYPE = 
{ "void","#1","#i","()","this","[]","f()",".","->","p++","p--","[:]","++p",
  "--p","&p","*p","+x","-x","~","!","sizeof(E)","sizeof(T)","()x","@",
  "*","/","%","+","-","<<",">>","<",">","<=",">=","==","!=","&","^","|",
  "&&","||",":?","=","*=","/=","%=","+=","-=","<<=",">>=","&=","^=","|=",
  "'","L_Comp","L_Extract","L_abs","L_add","L_add_c","L_mac","L_macNs",
  "L_msu","L_mult","L_negate","L_shl","L_shr","L_shr_r","L_sub","L_deposit_h",
  "L_deposit_l","Mpy_32","Mpy_32_16","abs_s","add","div_s","mac_r","msu_r",
  "mult","mult_r","negate","norm_l","norm_s","extract_l","extract_h","overflow",
  "round","saturate","shl","shr","shr_r","sub" }; */
/* note bgelim._PE_DSP_WEIGHT_OPERATION_STATIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,
    1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,
    1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,
    1.500000000000000e+01,1.500000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,
    1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,
    1.500000000000000e+01,1.500000000000000e+01,1.500000000000000e+01,
    1.500000000000000e+01,1.500000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,3.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,2.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,3.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,1.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,7.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,3.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    3.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    2.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    1.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note bgelim._SCC_PUBLIC = true; */

// interface class definitions ///////////////////////////////////////

#line 27 "i_receive.sc"
class i_receive
{
private:
public:

#line 3355 "DesignA.h"
    virtual ~i_receive(void){};

#line 31 "i_receive.sc"
    virtual void receive(void) = 0;
private:
};

#line 23 "i_receiver.sc"
class i_receiver
{
private:
public:

#line 3369 "DesignA.h"
    virtual ~i_receiver(void){};

#line 27 "i_receiver.sc"
    virtual void receive(void *, unsigned long int) = 0;
private:
};

#line 25 "i_send.sc"
class i_send
{
private:
public:

#line 3383 "DesignA.h"
    virtual ~i_send(void){};

#line 29 "i_send.sc"
    virtual void send(void) = 0;
private:
};

#line 24 "i_sender.sc"
class i_sender
{
private:
public:

#line 3397 "DesignA.h"
    virtual ~i_sender(void){};

#line 28 "i_sender.sc"
    virtual void send(const void *, unsigned long int) = 0;
private:
};

#line 25 "i_tranceiver.sc"
class i_tranceiver
{
private:
public:

#line 3411 "DesignA.h"
    virtual ~i_tranceiver(void){};

#line 30 "i_tranceiver.sc"
    virtual void receive(void *, unsigned long int) = 0;

#line 29 "i_tranceiver.sc"
    virtual void send(const void *, unsigned long int) = 0;
private:
};

// IP class definitions //////////////////////////////////////////////


// behavior and channel class definitions ////////////////////////////

#line 594 "./mixtures_gaussian.sc"
class mixtures : public _specc::behavior
{
private:

#line 594 "./mixtures_gaussian.sc"
    i_receiver (&in_frame); i_sender (&fr_bg_bw); i_sender (&fr_fg);
public:

#line 3436 "DesignA.h"
    mixtures(unsigned int _idcnt, i_receiver (&in_frame), i_sender (&fr_bg_bw), i_sender (&fr_fg));
    virtual ~mixtures(void);
    void main(void);
private:

#line 597 "./mixtures_gaussian.sc"
    double bg_bw[19200];
    double fg[19200];

#line 596 "./mixtures_gaussian.sc"
    double frame[19200];

#line 607 "./mixtures_gaussian.sc"
    int frame_idx;

#line 601 "./mixtures_gaussian.sc"
    unsigned char frbg[19200];
    unsigned char frfg[19200];

#line 600 "./mixtures_gaussian.sc"
    unsigned char frg[19200];

#line 606 "./mixtures_gaussian.sc"
    int q;

#line 604 "./mixtures_gaussian.sc"
    unsigned char rgbframe[57600];
};

#line 28 "./monitor.sc"
class Monitor : public _specc::behavior
{
private:

#line 28 "./monitor.sc"
    i_receiver (&frameBg); i_receiver (&frameFg);
public:

#line 3475 "DesignA.h"
    Monitor(unsigned int _idcnt, i_receiver (&frameBg), i_receiver (&frameFg));
    virtual ~Monitor(void);
    void main(void);
private:

#line 31 "./monitor.sc"
    unsigned char frameB[19200];
    unsigned char frameF[19200];

#line 30 "./monitor.sc"
    int frame_idx;
};

#line 54 "./rgb2gray.sc"
class rgb2gray : public _specc::behavior
{
private:

#line 54 "./rgb2gray.sc"
    i_receive (&start); i_receiver (&rgbFrame); i_sender (&gsFrame);
public:

#line 3498 "DesignA.h"
    rgb2gray(unsigned int _idcnt, i_receive (&start), i_receiver (&rgbFrame), i_sender (&gsFrame));
    virtual ~rgb2gray(void);
    void main(void);
private:
};

#line 33 "./stimulus.sc"
class Stimulus : public _specc::behavior
{
private:

#line 33 "./stimulus.sc"
    i_sender (&out_queue); i_send (&start);
public:

#line 3514 "DesignA.h"
    Stimulus(unsigned int _idcnt, i_sender (&out_queue), i_send (&start));
    virtual ~Stimulus(void);
    void main(void);
private:
};

#line 54 "c_handshake.sc"
class c_handshake : public _specc::channel, public i_send, public i_receive
{
private:
public:

#line 3527 "DesignA.h"
    c_handshake();
    virtual ~c_handshake(void);
    void receive(void);
    void send(void);
private:

#line 58 "c_handshake.sc"
    _specc::event e;
    bool f;
    bool w;
};

#line 74 "c_queue.sc"
class c_queue : public _specc::channel, public i_sender, public i_receiver, public i_tranceiver
{
private:

#line 74 "c_queue.sc"
    const unsigned long int (&size);
public:

#line 3549 "DesignA.h"
    c_queue(const unsigned long int (&size));
    virtual ~c_queue(void);
    void cleanup(void);
    void receive(void *, unsigned long int);
    void send(const void *, unsigned long int);
    void setup(void);
private:

#line 85 "c_queue.sc"
    char *buffer;

#line 84 "c_queue.sc"
    unsigned long int n;

#line 83 "c_queue.sc"
    unsigned long int p;

#line 79 "c_queue.sc"
    _specc::event r;
    _specc::event s;
    unsigned long int wr;
    unsigned long int ws;
};

#line 3574 "DesignA.h"
class Motorola_DSP56600_0_DSP : public _specc::behavior
{
private:
    i_receive (&start);
    i_receiver (&frameRGB);
    i_sender (&frameBg);
    i_sender (&frameFg);
public:
    Motorola_DSP56600_0_DSP(unsigned int _idcnt, i_receive (&start), i_receiver (&frameRGB), i_sender (&frameBg), i_sender (&frameFg));
    virtual ~Motorola_DSP56600_0_DSP(void);
    void main(void);
private:
    const unsigned long int QUEUE_SIZE;
    c_queue frameGS;
    mixtures mixt;
    rgb2gray rgbg_c;
};

class bgelim : public _specc::behavior
{
private:
    i_receive (&start);
    i_receiver (&frameRGB);
    i_sender (&frameBg);
    i_sender (&frameFg);
public:
    bgelim(unsigned int _idcnt, i_receive (&start), i_receiver (&frameRGB), i_sender (&frameBg), i_sender (&frameFg));
    virtual ~bgelim(void);
    void main(void);
private:
    Motorola_DSP56600_0_DSP DSP;
};

#line 12 "Design.sc"
class Main : public _specc::class_type
{
private:
public:

#line 3614 "DesignA.h"
    Main(unsigned int _idcnt);
    virtual ~Main(void);
    int main(void);
private:

#line 16 "Design.sc"
    const unsigned long int QUEUE_SIZE;

#line 3623 "DesignA.h"
    bgelim bge;

#line 19 "Design.sc"
    c_queue frameBg;
    c_queue frameFg;

#line 18 "Design.sc"
    c_queue frameRGB;

#line 24 "Design.sc"
    Monitor moni;

#line 14 "Design.sc"
    c_handshake start;

#line 22 "Design.sc"
    Stimulus stim;
};

#line 70 "c_double_handshake.sc"
class c_double_handshake : public _specc::channel, public i_sender, public i_receiver, public i_tranceiver
{
private:
public:

#line 3649 "DesignA.h"
    c_double_handshake();
    virtual ~c_double_handshake(void);
    void receive(void *, unsigned long int);
    void send(const void *, unsigned long int);
private:

#line 75 "c_double_handshake.sc"
    _specc::event ack;

#line 74 "c_double_handshake.sc"
    _specc::event req;



    const void *tmpd;
    unsigned long int tmpl;

#line 76 "c_double_handshake.sc"
    bool v;
    bool w;
};

// variable and function declarations ////////////////////////////////

#line 19 "./rt_nonfinite.h"
extern double rtInf;
extern double rtMinusInf;
extern double rtNaN;
extern float rtInfF;
extern float rtMinusInfF;
extern float rtNaNF;
extern "C" void rt_InitInfAndNaN(unsigned int);
extern "C" unsigned char rtIsInf(double);
extern "C" unsigned char rtIsInfF(float);

extern "C" unsigned char rtIsNaNF(float);

#line 49 "/ECEnet/Apps1/sce-20100908/inc/sim.sh"
extern const int _SPECC_VERSION_MAJOR;
extern const int _SPECC_VERSION_MINOR;

#line 42 "/ECEnet/Apps1/sce-20100908/inc/sim/bit.sh"
extern "C" char *bit2str(unsigned int, char *, ...);

#line 48 "/ECEnet/Apps1/sce-20100908/inc/sim/bit.sh"
extern "C" char *ubit2str(unsigned int, char *, ...);




extern "C" void str2bit(unsigned int, const char *, ...);




extern "C" void str2ubit(unsigned int, const char *, ...);

#line 41 "/ECEnet/Apps1/sce-20100908/inc/sim/longlong.sh"
extern "C" char *ll2str(unsigned int, char *, long long int);




extern "C" char *ull2str(unsigned int, char *, unsigned long long int);




extern "C" long long int str2ll(unsigned int, const char *);



extern "C" unsigned long long int str2ull(unsigned int, const char *);

#line 73 "/ECEnet/Apps1/sce-20100908/inc/sim/time.sh"
extern "C" unsigned long long int now(void);

extern "C" unsigned long long int delta(void);


extern "C" const char *time2str(char [21], unsigned long long int);



extern "C" unsigned long long int str2time(const char *);

#line 33 "/usr/include/alloca.h"
extern "C" void *alloca(unsigned int);

#line 55 "/usr/include/bits/mathcalls.h"
extern "C" double __acos(double); extern "C" float __acosf(float); extern "C" long double __acosl(long double); extern "C" double acos(double); extern "C" float acosf(float); extern "C" long double acosl(long double);

extern "C" double __asin(double); extern "C" float __asinf(float); extern "C" long double __asinl(long double); extern "C" double asin(double); extern "C" float asinf(float); extern "C" long double asinl(long double);

extern "C" double __atan(double); extern "C" float __atanf(float); extern "C" long double __atanl(long double); extern "C" double atan(double); extern "C" float atanf(float); extern "C" long double atanl(long double);

extern "C" double __atan2(double, double); extern "C" float __atan2f(float, float); extern "C" long double __atan2l(long double, long double); extern "C" double atan2(double, double); extern "C" float atan2f(float, float); extern "C" long double atan2l(long double, long double);


extern "C" double __cos(double); extern "C" float __cosf(float); extern "C" long double __cosl(long double); extern "C" double cos(double); extern "C" float cosf(float); extern "C" long double cosl(long double);

extern "C" double __sin(double); extern "C" float __sinf(float); extern "C" long double __sinl(long double); extern "C" double sin(double); extern "C" float sinf(float); extern "C" long double sinl(long double);

extern "C" double __tan(double); extern "C" float __tanf(float); extern "C" long double __tanl(long double); extern "C" double tan(double); extern "C" float tanf(float); extern "C" long double tanl(long double);




extern "C" double __cosh(double); extern "C" float __coshf(float); extern "C" long double __coshl(long double); extern "C" double cosh(double); extern "C" float coshf(float); extern "C" long double coshl(long double);

extern "C" double __sinh(double); extern "C" float __sinhf(float); extern "C" long double __sinhl(long double); extern "C" double sinh(double); extern "C" float sinhf(float); extern "C" long double sinhl(long double);

extern "C" double __tanh(double); extern "C" float __tanhf(float); extern "C" long double __tanhl(long double); extern "C" double tanh(double); extern "C" float tanhf(float); extern "C" long double tanhl(long double);

#line 89 "/usr/include/bits/mathcalls.h"
extern "C" double __acosh(double); extern "C" float __acoshf(float); extern "C" long double __acoshl(long double); extern "C" double acosh(double); extern "C" float acoshf(float); extern "C" long double acoshl(long double);

extern "C" double __asinh(double); extern "C" float __asinhf(float); extern "C" long double __asinhl(long double); extern "C" double asinh(double); extern "C" float asinhf(float); extern "C" long double asinhl(long double);

extern "C" double __atanh(double); extern "C" float __atanhf(float); extern "C" long double __atanhl(long double); extern "C" double atanh(double); extern "C" float atanhf(float); extern "C" long double atanhl(long double);

#line 101 "/usr/include/bits/mathcalls.h"
extern "C" double __exp(double); extern "C" float __expf(float); extern "C" long double __expl(long double); extern "C" double exp(double); extern "C" float expf(float); extern "C" long double expl(long double);


extern "C" double __frexp(double, int *); extern "C" float __frexpf(float, int *); extern "C" long double __frexpl(long double, int *); extern "C" double frexp(double, int *); extern "C" float frexpf(float, int *); extern "C" long double frexpl(long double, int *);


extern "C" double __ldexp(double, int); extern "C" float __ldexpf(float, int); extern "C" long double __ldexpl(long double, int); extern "C" double ldexp(double, int); extern "C" float ldexpf(float, int); extern "C" long double ldexpl(long double, int);


extern "C" double __log(double); extern "C" float __logf(float); extern "C" long double __logl(long double); extern "C" double log(double); extern "C" float logf(float); extern "C" long double logl(long double);


extern "C" double __log10(double); extern "C" float __log10f(float); extern "C" long double __log10l(long double); extern "C" double log10(double); extern "C" float log10f(float); extern "C" long double log10l(long double);


extern "C" double __modf(double, double *); extern "C" float __modff(float, float *); extern "C" long double __modfl(long double, long double *); extern "C" double modf(double, double *); extern "C" float modff(float, float *); extern "C" long double modfl(long double, long double *);

#line 129 "/usr/include/bits/mathcalls.h"
extern "C" double __expm1(double); extern "C" float __expm1f(float); extern "C" long double __expm1l(long double); extern "C" double expm1(double); extern "C" float expm1f(float); extern "C" long double expm1l(long double);


extern "C" double __log1p(double); extern "C" float __log1pf(float); extern "C" long double __log1pl(long double); extern "C" double log1p(double); extern "C" float log1pf(float); extern "C" long double log1pl(long double);


extern "C" double __logb(double); extern "C" float __logbf(float); extern "C" long double __logbl(long double); extern "C" double logb(double); extern "C" float logbf(float); extern "C" long double logbl(long double);

#line 154 "/usr/include/bits/mathcalls.h"
extern "C" double __pow(double, double); extern "C" float __powf(float, float); extern "C" long double __powl(long double, long double); extern "C" double pow(double, double); extern "C" float powf(float, float); extern "C" long double powl(long double, long double);


extern "C" double __sqrt(double); extern "C" float __sqrtf(float); extern "C" long double __sqrtl(long double); extern "C" double sqrt(double); extern "C" float sqrtf(float); extern "C" long double sqrtl(long double);

#line 163 "/usr/include/bits/mathcalls.h"
extern "C" double __hypot(double, double); extern "C" float __hypotf(float, float); extern "C" long double __hypotl(long double, long double); extern "C" double hypot(double, double); extern "C" float hypotf(float, float); extern "C" long double hypotl(long double, long double);

#line 170 "/usr/include/bits/mathcalls.h"
extern "C" double __cbrt(double); extern "C" float __cbrtf(float); extern "C" long double __cbrtl(long double); extern "C" double cbrt(double); extern "C" float cbrtf(float); extern "C" long double cbrtl(long double);

#line 179 "/usr/include/bits/mathcalls.h"
extern "C" double __ceil(double); extern "C" float __ceilf(float); extern "C" long double __ceill(long double); extern "C" double ceil(double); extern "C" float ceilf(float); extern "C" long double ceill(long double);


extern "C" double __fabs(double); extern "C" float __fabsf(float); extern "C" long double __fabsl(long double); extern "C" double fabs(double); extern "C" float fabsf(float); extern "C" long double fabsl(long double);


extern "C" double __floor(double); extern "C" float __floorf(float); extern "C" long double __floorl(long double); extern "C" double floor(double); extern "C" float floorf(float); extern "C" long double floorl(long double);


extern "C" double __fmod(double, double); extern "C" float __fmodf(float, float); extern "C" long double __fmodl(long double, long double); extern "C" double fmod(double, double); extern "C" float fmodf(float, float); extern "C" long double fmodl(long double, long double);




extern "C" int __isinf(double); extern "C" int __isinff(float); extern "C" int __isinfl(long double);


extern "C" int __finite(double); extern "C" int __finitef(float); extern "C" int __finitel(long double);

#line 202 "/usr/include/bits/mathcalls.h"
extern "C" int isinf(double); extern "C" int isinff(float); extern "C" int isinfl(long double);


extern "C" int finite(double); extern "C" int finitef(float); extern "C" int finitel(long double);


extern "C" double __drem(double, double); extern "C" float __dremf(float, float); extern "C" long double __dreml(long double, long double); extern "C" double drem(double, double); extern "C" float dremf(float, float); extern "C" long double dreml(long double, long double);



extern "C" double __significand(double); extern "C" float __significandf(float); extern "C" long double __significandl(long double); extern "C" double significand(double); extern "C" float significandf(float); extern "C" long double significandl(long double);

#line 218 "/usr/include/bits/mathcalls.h"
extern "C" double __copysign(double, double); extern "C" float __copysignf(float, float); extern "C" long double __copysignl(long double, long double); extern "C" double copysign(double, double); extern "C" float copysignf(float, float); extern "C" long double copysignl(long double, long double);

#line 231 "/usr/include/bits/mathcalls.h"
extern "C" int __isnan(double); extern "C" int __isnanf(float); extern "C" int __isnanl(long double);



extern "C" int isnan(double); extern "C" int isnanf(float); extern "C" int isnanl(long double);


extern "C" double __j0(double); extern "C" float __j0f(float); extern "C" long double __j0l(long double); extern "C" double j0(double); extern "C" float j0f(float); extern "C" long double j0l(long double);
extern "C" double __j1(double); extern "C" float __j1f(float); extern "C" long double __j1l(long double); extern "C" double j1(double); extern "C" float j1f(float); extern "C" long double j1l(long double);
extern "C" double __jn(int, double); extern "C" float __jnf(int, float); extern "C" long double __jnl(int, long double); extern "C" double jn(int, double); extern "C" float jnf(int, float); extern "C" long double jnl(int, long double);
extern "C" double __y0(double); extern "C" float __y0f(float); extern "C" long double __y0l(long double); extern "C" double y0(double); extern "C" float y0f(float); extern "C" long double y0l(long double);
extern "C" double __y1(double); extern "C" float __y1f(float); extern "C" long double __y1l(long double); extern "C" double y1(double); extern "C" float y1f(float); extern "C" long double y1l(long double);
extern "C" double __yn(int, double); extern "C" float __ynf(int, float); extern "C" long double __ynl(int, long double); extern "C" double yn(int, double); extern "C" float ynf(int, float); extern "C" long double ynl(int, long double);

#line 250 "/usr/include/bits/mathcalls.h"
extern "C" double __erf(double); extern "C" float __erff(float); extern "C" long double __erfl(long double); extern "C" double erf(double); extern "C" float erff(float); extern "C" long double erfl(long double);
extern "C" double __erfc(double); extern "C" float __erfcf(float); extern "C" long double __erfcl(long double); extern "C" double erfc(double); extern "C" float erfcf(float); extern "C" long double erfcl(long double);
extern "C" double __lgamma(double); extern "C" float __lgammaf(float); extern "C" long double __lgammal(long double); extern "C" double lgamma(double); extern "C" float lgammaf(float); extern "C" long double lgammal(long double);

#line 265 "/usr/include/bits/mathcalls.h"
extern "C" double __gamma(double); extern "C" float __gammaf(float); extern "C" long double __gammal(long double); extern "C" double gamma(double); extern "C" float gammaf(float); extern "C" long double gammal(long double);

#line 272 "/usr/include/bits/mathcalls.h"
extern "C" double __lgamma_r(double, int *); extern "C" float __lgammaf_r(float, int *); extern "C" long double __lgammal_r(long double, int *); extern "C" double lgamma_r(double, int *); extern "C" float lgammaf_r(float, int *); extern "C" long double lgammal_r(long double, int *);

#line 280 "/usr/include/bits/mathcalls.h"
extern "C" double __rint(double); extern "C" float __rintf(float); extern "C" long double __rintl(long double); extern "C" double rint(double); extern "C" float rintf(float); extern "C" long double rintl(long double);


extern "C" double __nextafter(double, double); extern "C" float __nextafterf(float, float); extern "C" long double __nextafterl(long double, long double); extern "C" double nextafter(double, double); extern "C" float nextafterf(float, float); extern "C" long double nextafterl(long double, long double);

#line 289 "/usr/include/bits/mathcalls.h"
extern "C" double __remainder(double, double); extern "C" float __remainderf(float, float); extern "C" long double __remainderl(long double, long double); extern "C" double remainder(double, double); extern "C" float remainderf(float, float); extern "C" long double remainderl(long double, long double);



extern "C" double __scalbn(double, int); extern "C" float __scalbnf(float, int); extern "C" long double __scalbnl(long double, int); extern "C" double scalbn(double, int); extern "C" float scalbnf(float, int); extern "C" long double scalbnl(long double, int);



extern "C" int __ilogb(double); extern "C" int __ilogbf(float); extern "C" int __ilogbl(long double); extern "C" int ilogb(double); extern "C" int ilogbf(float); extern "C" int ilogbl(long double);

#line 364 "/usr/include/bits/mathcalls.h"
extern "C" double __scalb(double, double); extern "C" float __scalbf(float, float); extern "C" long double __scalbl(long double, long double); extern "C" double scalb(double, double); extern "C" float scalbf(float, float); extern "C" long double scalbl(long double, long double);

#line 27 "/usr/include/bits/sys_errlist.h"
extern int sys_nerr;
extern const char *const sys_errlist[];

#line 343 "/usr/include/libio.h"
extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;

#line 413 "/usr/include/libio.h"
extern "C" int __underflow(struct _IO_FILE *);
extern "C" int __uflow(struct _IO_FILE *);
extern "C" int __overflow(struct _IO_FILE *, int);
extern "C" unsigned int __wunderflow(struct _IO_FILE *);
extern "C" unsigned int __wuflow(struct _IO_FILE *);
extern "C" unsigned int __woverflow(struct _IO_FILE *, unsigned int);

#line 451 "/usr/include/libio.h"
extern "C" int _IO_getc(struct _IO_FILE *);
extern "C" int _IO_putc(int, struct _IO_FILE *);
extern "C" int _IO_feof(struct _IO_FILE *);
extern "C" int _IO_ferror(struct _IO_FILE *);

extern "C" int _IO_peekc_locked(struct _IO_FILE *);

#line 462 "/usr/include/libio.h"
extern "C" void _IO_flockfile(struct _IO_FILE *);
extern "C" void _IO_funlockfile(struct _IO_FILE *);
extern "C" int _IO_ftrylockfile(struct _IO_FILE *);

#line 481 "/usr/include/libio.h"
extern "C" int _IO_vfscanf(struct _IO_FILE *, const char *, void *, int *);

extern "C" int _IO_vfprintf(struct _IO_FILE *, const char *, void *);

extern "C" int _IO_padn(struct _IO_FILE *, int, int);
extern "C" unsigned int _IO_sgetn(struct _IO_FILE *, void *, unsigned int);

extern "C" __quad_t _IO_seekoff(struct _IO_FILE *, __quad_t, int, int);
extern "C" __quad_t _IO_seekpos(struct _IO_FILE *, __quad_t, int);

extern "C" void _IO_free_backup_area(struct _IO_FILE *);

#line 157 "/usr/include/math.h"
extern int signgam;

#line 296 "/usr/include/math.h"
extern _LIB_VERSION_TYPE _LIB_VERSION;

#line 322 "/usr/include/math.h"
extern "C" int matherr(struct exception *);

#line 142 "/usr/include/stdio.h"
extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;

#line 154 "/usr/include/stdio.h"
extern "C" int remove(const char *);

extern "C" int rename(const char *, const char *);

#line 171 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *tmpfile(void);

#line 185 "/usr/include/stdio.h"
extern "C" char *tmpnam(char *);

#line 191 "/usr/include/stdio.h"
extern "C" char *tmpnam_r(char *);

#line 203 "/usr/include/stdio.h"
extern "C" char *tempnam(const char *, const char *);

#line 213 "/usr/include/stdio.h"
extern "C" int fclose(struct _IO_FILE *);




extern "C" int fflush(struct _IO_FILE *);

#line 228 "/usr/include/stdio.h"
extern "C" int fflush_unlocked(struct _IO_FILE *);

#line 248 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *fopen(const char *, const char *);

#line 254 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *freopen(const char *, const char *, struct _IO_FILE *);

#line 280 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *fdopen(int, const char *);

#line 303 "/usr/include/stdio.h"
extern "C" void setbuf(struct _IO_FILE *, char *);



extern "C" int setvbuf(struct _IO_FILE *, char *, int, unsigned int);

#line 314 "/usr/include/stdio.h"
extern "C" void setbuffer(struct _IO_FILE *, char *, unsigned int);



extern "C" void setlinebuf(struct _IO_FILE *);

#line 327 "/usr/include/stdio.h"
extern "C" int fprintf(struct _IO_FILE *, const char *, ...);

#line 333 "/usr/include/stdio.h"
extern "C" int printf(const char *, ...);

extern "C" int sprintf(char *, const char *, ...);

#line 342 "/usr/include/stdio.h"
extern "C" int vfprintf(struct _IO_FILE *, const char *, void *);

#line 348 "/usr/include/stdio.h"
extern "C" int vprintf(const char *, void *);

extern "C" int vsprintf(char *, const char *, void *);

#line 357 "/usr/include/stdio.h"
extern "C" int snprintf(char *, unsigned int, const char *, ...);



extern "C" int vsnprintf(char *, unsigned int, const char *, void *);

#line 399 "/usr/include/stdio.h"
extern "C" int fscanf(struct _IO_FILE *, const char *, ...);

#line 405 "/usr/include/stdio.h"
extern "C" int scanf(const char *, ...);

extern "C" int sscanf(const char *, const char *, ...);

#line 441 "/usr/include/stdio.h"
extern "C" int fgetc(struct _IO_FILE *);
extern "C" int getc(struct _IO_FILE *);

#line 448 "/usr/include/stdio.h"
extern "C" int getchar(void);

#line 460 "/usr/include/stdio.h"
extern "C" int getc_unlocked(struct _IO_FILE *);
extern "C" int getchar_unlocked(void);

#line 471 "/usr/include/stdio.h"
extern "C" int fgetc_unlocked(struct _IO_FILE *);

#line 483 "/usr/include/stdio.h"
extern "C" int fputc(int, struct _IO_FILE *);
extern "C" int putc(int, struct _IO_FILE *);

#line 490 "/usr/include/stdio.h"
extern "C" int putchar(int);

#line 504 "/usr/include/stdio.h"
extern "C" int fputc_unlocked(int, struct _IO_FILE *);

#line 512 "/usr/include/stdio.h"
extern "C" int putc_unlocked(int, struct _IO_FILE *);
extern "C" int putchar_unlocked(int);

#line 520 "/usr/include/stdio.h"
extern "C" int getw(struct _IO_FILE *);


extern "C" int putw(int, struct _IO_FILE *);

#line 532 "/usr/include/stdio.h"
extern "C" char *fgets(char *, int, struct _IO_FILE *);

#line 540 "/usr/include/stdio.h"
extern "C" char *gets(char *);

#line 590 "/usr/include/stdio.h"
extern "C" int fputs(const char *, struct _IO_FILE *);

#line 596 "/usr/include/stdio.h"
extern "C" int puts(const char *);

#line 603 "/usr/include/stdio.h"
extern "C" int ungetc(int, struct _IO_FILE *);

#line 610 "/usr/include/stdio.h"
extern "C" unsigned int fread(void *, unsigned int, unsigned int, struct _IO_FILE *);

#line 616 "/usr/include/stdio.h"
extern "C" unsigned int fwrite(const void *, unsigned int, unsigned int, struct _IO_FILE *);

#line 638 "/usr/include/stdio.h"
extern "C" unsigned int fread_unlocked(void *, unsigned int, unsigned int, struct _IO_FILE *);

extern "C" unsigned int fwrite_unlocked(const void *, unsigned int, unsigned int, struct _IO_FILE *);

#line 650 "/usr/include/stdio.h"
extern "C" int fseek(struct _IO_FILE *, long int, int);




extern "C" long int ftell(struct _IO_FILE *);




extern "C" void rewind(struct _IO_FILE *);

#line 674 "/usr/include/stdio.h"
extern "C" int fseeko(struct _IO_FILE *, long int, int);




extern "C" long int ftello(struct _IO_FILE *);

#line 699 "/usr/include/stdio.h"
extern "C" int fgetpos(struct _IO_FILE *, _G_fpos_t *);




extern "C" int fsetpos(struct _IO_FILE *, const _G_fpos_t *);

#line 727 "/usr/include/stdio.h"
extern "C" void clearerr(struct _IO_FILE *);

extern "C" int feof(struct _IO_FILE *);

extern "C" int ferror(struct _IO_FILE *);




extern "C" void clearerr_unlocked(struct _IO_FILE *);
extern "C" int feof_unlocked(struct _IO_FILE *);
extern "C" int ferror_unlocked(struct _IO_FILE *);

#line 747 "/usr/include/stdio.h"
extern "C" void perror(const char *);

#line 759 "/usr/include/stdio.h"
extern "C" int fileno(struct _IO_FILE *);




extern "C" int fileno_unlocked(struct _IO_FILE *);

#line 774 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *popen(const char *, const char *);

#line 780 "/usr/include/stdio.h"
extern "C" int pclose(struct _IO_FILE *);

#line 786 "/usr/include/stdio.h"
extern "C" char *ctermid(char *);

#line 814 "/usr/include/stdio.h"
extern "C" void flockfile(struct _IO_FILE *);



extern "C" int ftrylockfile(struct _IO_FILE *);


extern "C" void funlockfile(struct _IO_FILE *);

#line 140 "/usr/include/stdlib.h"
extern "C" unsigned int __ctype_get_mb_cur_max(void);




extern "C" double atof(const char *);


extern "C" int atoi(const char *);


extern "C" long int atol(const char *);

#line 165 "/usr/include/stdlib.h"
extern "C" double strtod(const char *, char **);

#line 184 "/usr/include/stdlib.h"
extern "C" long int strtol(const char *, char **, int);



extern "C" unsigned long int strtoul(const char *, char **, int);

#line 279 "/usr/include/stdlib.h"
extern "C" double __strtod_internal(const char *, char **, int);


extern "C" float __strtof_internal(const char *, char **, int);


extern "C" long double __strtold_internal(const char *, char **, int);




extern "C" long int __strtol_internal(const char *, char **, int, int);

#line 297 "/usr/include/stdlib.h"
extern "C" unsigned long int __strtoul_internal(const char *, char **, int, int);

#line 429 "/usr/include/stdlib.h"
extern "C" char *l64a(long int);


extern "C" long int a64l(const char *);

#line 445 "/usr/include/stdlib.h"
extern "C" long int random(void);


extern "C" void srandom(unsigned int);

#line 454 "/usr/include/stdlib.h"
extern "C" char *initstate(unsigned int, char *, unsigned int);




extern "C" char *setstate(char *);

#line 478 "/usr/include/stdlib.h"
extern "C" int random_r(struct random_data *, int *);


extern "C" int srandom_r(unsigned int, struct random_data *);


extern "C" int initstate_r(unsigned int, char *, unsigned int, struct random_data *);




extern "C" int setstate_r(char *, struct random_data *);

#line 498 "/usr/include/stdlib.h"
extern "C" int rand(void);

extern "C" void srand(unsigned int);




extern "C" int rand_r(unsigned int *);

#line 513 "/usr/include/stdlib.h"
extern "C" double drand48(void);
extern "C" double erand48(unsigned short int [3]);


extern "C" long int lrand48(void);
extern "C" long int nrand48(unsigned short int [3]);



extern "C" long int mrand48(void);
extern "C" long int jrand48(unsigned short int [3]);



extern "C" void srand48(long int);
extern "C" unsigned short int *seed48(unsigned short int [3]);

extern "C" void lcong48(unsigned short int [7]);

#line 546 "/usr/include/stdlib.h"
extern "C" int drand48_r(struct drand48_data *, double *);

extern "C" int erand48_r(unsigned short int [3], struct drand48_data *, double *);




extern "C" int lrand48_r(struct drand48_data *, long int *);


extern "C" int nrand48_r(unsigned short int [3], struct drand48_data *, long int *);

#line 562 "/usr/include/stdlib.h"
extern "C" int mrand48_r(struct drand48_data *, long int *);


extern "C" int jrand48_r(unsigned short int [3], struct drand48_data *, long int *);

#line 571 "/usr/include/stdlib.h"
extern "C" int srand48_r(long int, struct drand48_data *);


extern "C" int seed48_r(unsigned short int [3], struct drand48_data *);


extern "C" int lcong48_r(unsigned short int [7], struct drand48_data *);

#line 589 "/usr/include/stdlib.h"
extern "C" void *malloc(unsigned int);

extern "C" void *calloc(unsigned int, unsigned int);

#line 600 "/usr/include/stdlib.h"
extern "C" void *realloc(void *, unsigned int);


extern "C" void free(void *);




extern "C" void cfree(void *);

#line 617 "/usr/include/stdlib.h"
extern "C" void *valloc(unsigned int);




extern "C" int posix_memalign(void **, unsigned int, unsigned int);

#line 628 "/usr/include/stdlib.h"
extern "C" void abort(void);



extern "C" int atexit(void (*)(void));

#line 638 "/usr/include/stdlib.h"
extern "C" int on_exit(void (*)(int, void *), void *);

#line 646 "/usr/include/stdlib.h"
extern "C" void exit(int);

#line 660 "/usr/include/stdlib.h"
extern "C" char *getenv(const char *);




extern "C" char *__secure_getenv(const char *);

#line 672 "/usr/include/stdlib.h"
extern "C" int putenv(char *);

#line 678 "/usr/include/stdlib.h"
extern "C" int setenv(const char *, const char *, int);



extern "C" int unsetenv(const char *);

#line 689 "/usr/include/stdlib.h"
extern "C" int clearenv(void);

#line 698 "/usr/include/stdlib.h"
extern "C" char *mktemp(char *);

#line 709 "/usr/include/stdlib.h"
extern "C" int mkstemp(char *);

#line 729 "/usr/include/stdlib.h"
extern "C" char *mkdtemp(char *);

#line 738 "/usr/include/stdlib.h"
extern "C" int system(const char *);

#line 756 "/usr/include/stdlib.h"
extern "C" char *realpath(const char *, char *);

#line 774 "/usr/include/stdlib.h"
extern "C" void *bsearch(const void *, const void *, unsigned int, unsigned int, int (*)(const void *, const void *));

#line 780 "/usr/include/stdlib.h"
extern "C" void qsort(void *, unsigned int, unsigned int, int (*)(const void *, const void *));




extern "C" int abs(int);
extern "C" long int labs(long int);

#line 799 "/usr/include/stdlib.h"
extern "C" div_t div(int, int);

extern "C" ldiv_t ldiv(long int, long int);

#line 821 "/usr/include/stdlib.h"
extern "C" char *ecvt(double, int, int *, int *);

#line 827 "/usr/include/stdlib.h"
extern "C" char *fcvt(double, int, int *, int *);

#line 833 "/usr/include/stdlib.h"
extern "C" char *gcvt(double, int, char *);

#line 839 "/usr/include/stdlib.h"
extern "C" char *qecvt(long double, int, int *, int *);


extern "C" char *qfcvt(long double, int, int *, int *);


extern "C" char *qgcvt(long double, int, char *);

#line 851 "/usr/include/stdlib.h"
extern "C" int ecvt_r(double, int, int *, int *, char *, unsigned int);


extern "C" int fcvt_r(double, int, int *, int *, char *, unsigned int);



extern "C" int qecvt_r(long double, int, int *, int *, char *, unsigned int);



extern "C" int qfcvt_r(long double, int, int *, int *, char *, unsigned int);

#line 873 "/usr/include/stdlib.h"
extern "C" int mblen(const char *, unsigned int);


extern "C" int mbtowc(long int *, const char *, unsigned int);



extern "C" int wctomb(char *, long int);



extern "C" unsigned int mbstowcs(long int *, const char *, unsigned int);


extern "C" unsigned int wcstombs(char *, const long int *, unsigned int);

#line 898 "/usr/include/stdlib.h"
extern "C" int rpmatch(const char *);

#line 926 "/usr/include/stdlib.h"
extern "C" int posix_openpt(int);

#line 961 "/usr/include/stdlib.h"
extern "C" int getloadavg(double [], int);

#line 38 "/usr/include/string.h"
extern "C" void *memcpy(void *, const void *, unsigned int);




extern "C" void *memmove(void *, const void *, unsigned int);

#line 51 "/usr/include/string.h"
extern "C" void *memccpy(void *, const void *, int, unsigned int);

#line 59 "/usr/include/string.h"
extern "C" void *memset(void *, int, unsigned int);


extern "C" int memcmp(const void *, const void *, unsigned int);



extern "C" void *memchr(const void *, int, unsigned int);

#line 84 "/usr/include/string.h"
extern "C" char *strcpy(char *, const char *);


extern "C" char *strncpy(char *, const char *, unsigned int);




extern "C" char *strcat(char *, const char *);


extern "C" char *strncat(char *, const char *, unsigned int);



extern "C" int strcmp(const char *, const char *);


extern "C" int strncmp(const char *, const char *, unsigned int);



extern "C" int strcoll(const char *, const char *);


extern "C" unsigned int strxfrm(char *, const char *, unsigned int);

#line 130 "/usr/include/string.h"
extern "C" char *strdup(const char *);

#line 167 "/usr/include/string.h"
extern "C" char *strchr(const char *, int);


extern "C" char *strrchr(const char *, int);

#line 184 "/usr/include/string.h"
extern "C" unsigned int strcspn(const char *, const char *);



extern "C" unsigned int strspn(const char *, const char *);


extern "C" char *strpbrk(const char *, const char *);


extern "C" char *strstr(const char *, const char *);




extern "C" char *strtok(char *, const char *);

#line 205 "/usr/include/string.h"
extern "C" char *__strtok_r(char *, const char *, char **);




extern "C" char *strtok_r(char *, const char *, char **);

#line 242 "/usr/include/string.h"
extern "C" unsigned int strlen(const char *);

#line 256 "/usr/include/string.h"
extern "C" char *strerror(int);

#line 274 "/usr/include/string.h"
extern "C" int __xpg_strerror_r(int, char *, unsigned int);

#line 288 "/usr/include/string.h"
extern "C" void __bzero(void *, unsigned int);



extern "C" void bcopy(const void *, void *, unsigned int);



extern "C" void bzero(void *, unsigned int);


extern "C" int bcmp(const void *, const void *, unsigned int);



extern "C" char *index(const char *, int);



extern "C" char *rindex(const char *, int);




extern "C" int ffs(int);

#line 325 "/usr/include/string.h"
extern "C" int strcasecmp(const char *, const char *);



extern "C" int strncasecmp(const char *, const char *, unsigned int);

#line 348 "/usr/include/string.h"
extern "C" char *strsep(char **, const char *);

#line 109 "/usr/include/sys/select.h"
extern "C" int select(int, fd_set *, fd_set *, fd_set *, struct timeval *);

#line 121 "/usr/include/sys/select.h"
extern "C" int pselect(int, fd_set *, fd_set *, fd_set *, const struct timespec *, const __sigset_t *);

#line 4581 "DesignA.h"
extern "C" void __PRF_channelAccess(unsigned int, unsigned int);
extern "C" void __PRF_startProfiler(const char *const, const char *const, unsigned int *, unsigned int);
static unsigned char all(const double [1], const int [2]);
static void b_abs(const double [19200], double [19200]);
static double b_rand(void);
static void b_rdivide(const double [3], const double [3], double [3]);
int decode_image(char [57600], char []);
static double eml_rand_mt19937ar_stateful(void);
void mix_g(double [19200], double [19200], double [19200]);
void mix_g_initialize(void);
static void rdivide(const double [3], double, double [3]);
void rgb_to_gray(unsigned char [57600], double [19200]);
void rgbg(unsigned char [57600], unsigned char [19200]);
unsigned char rtIsNaN(double);
static double rt_powd_snf(double, double);
void save_frame(unsigned char [19200], char [], int);
void save_frame1(double [19200], char [], int);
void save_frame_t(unsigned char [19200], char [], int);
static double sum(const double [3]);
void _scc_bit4_err_handle(const _bit4&);

//////////////////////////////////////////////////////////////////////
// End of file DesignA.h
//////////////////////////////////////////////////////////////////////
